secuencia2<-unlist(strsplit(cadena,""))
for (i in 1:length(secuencia2)){
if (secuencia2[i]!="-" && secuencia2[i]!="N" && secuencia2[1]!="n" && secuencia2[i]!=" " && secuencia2[i]!="\n" && secuencia2[i]!="0" && secuencia2[i]!="1" && secuencia2[i]!="2" && secuencia2[i]!="3" && secuencia2[i]!="4" && secuencia2[i]!="5" && secuencia2[i]!="6" && secuencia2[i]!="7" && secuencia2[i]!="8" && secuencia2[i]!="9"){
secuencia<-append(secuencia,secuencia2[i])
}
}
return(secuencia)
}
# Se llama a la función para crear los vectores y se le da su respectiva secuencia
vector_alpha <- veccreator(cadena_alpha)
vector_beta <- veccreator(cadena_beta)
vector_gamma <- veccreator(cadena_gamma)
vector_delta <- veccreator(cadena_delta)
vector_omicron <- veccreator(cadena_omicron)
#########################################################################################
# 2 - Crea un código para calcular la longitud de las secuencias de cada variante.
# La siguiente función calcula y arroja la longitud de cada secuencia (usando los vectores creados previamente)
howlong <- function(vectorvariante) {
longitud<-length(vectorvariante)
return(paste("La longitud de esta secuencia es de:",longitud,"nucleótidos."))
}
# Ahora se llama la función anterior con el vector para cada variante
howlong(vector_alpha)
howlong(vector_beta)
howlong(vector_gamma)
howlong(vector_delta)
howlong(vector_omicron)
#########################################################################################
# 3 - Crea un código para graficar y comparar el contenido de cada una de las bases de ADN que componen a cada una de las variantes del virus.
# La siguiente función calcula el porcentaje de cada base y acepta como argumento un vector con la secuencia de cada variante
porcentajesadn <- function(cadena) {
secuencia3<-cadena
contA<-0
contT<-0
contG<-0
contC<-0
longitud<-length(secuencia3)
for (i in 1:length(secuencia3)){
if (secuencia3[i]=="A" || secuencia3[i]=="a"){
contA<-contA+1
}else if (secuencia3[i]=="T" || secuencia3[i]=="t"){
contT<-contT+1
}else if (secuencia3[i]=="G" || secuencia3[i]=="g"){
contG<-contG+1
}else if (secuencia3[i]=="C" || secuencia3[i]=="c"){
contC<-contC+1
}else if (secuencia3[i]=="-" || secuencia3[i]=="N" || secuencia3[i]==" " || secuencia3[i]=="\n" || secuencia3[i]=="0" || secuencia3[i]=="1" || secuencia3[i]=="2" || secuencia3[i]=="3" || secuencia3[i]=="4" || secuencia3[i]=="5" || secuencia3[i]=="6" || secuencia3[i]=="7" || secuencia3[i]=="8" || secuencia3[i]=="9"){
longitud<-longitud-1
}
}
porcentA<<-(contA*100)/longitud
porcentT<<-(contT*100)/longitud
porcentG<<-(contG*100)/longitud
porcentC<<-(contC*100)/longitud
chain<-paste("Adenina:",porcentA,"%,  Timina:",porcentT,"%,  Guanina:",porcentG,"%,  Citosina:",porcentC,"%")
vecporcent<-c(porcentA,porcentT,porcentG,porcentC)
return(vecporcent)
}
# Ahora se manda a llamar la función y se obtiene un vector con los porcentajes de cada base para cada una de las variantes
porcent_alfa<-porcentajesadn(vector_alpha)
porcent_alfa
porcent_beta<-porcentajesadn(vector_beta)
porcent_beta
porcent_gamma<-porcentajesadn(vector_gamma)
porcent_gamma
porcent_delta<-porcentajesadn(vector_delta)
porcent_delta
porcent_omicron<-porcentajesadn(vector_omicron)
porcent_omicron
# Los porcentajes se colocan en un solo vector
# También se usan otros vectores para crear el dataframe
Variantes<-c("Alpha","Alpha","Alpha","Alpha","Beta","Beta","Beta","Beta","Gamma","Gamma","Gamma","Gamma","Delta","Delta","Delta","Delta","Omicron","Omicron","Omicron","Omicron")
Bases<-c("A","T","G","C","A","T","G","C","A","T","G","C","A","T","G","C","A","T","G","C")
Porcentajes<-c(porcent_alfa,porcent_beta,porcent_gamma,porcent_delta,porcent_omicron)
df2 <- data.frame(Bases,
Variantes,
Porcentajes)
df2
# Ya con el dataframe hecho, se elabora la gráfica usando ggplot
library(ggplot2)
ggplot(data=df2, aes(x=Variantes, y=Porcentajes, fill=Bases)) + geom_bar(stat="identity", position=position_dodge())
#########################################################################################
# 5 - Crea un código para calcular el %GC de cada variante (contenido de G+C, en términos de porcentaje).
# Se suman los porcentajes en los vectores obtenidos perviamente (paso 3)
porcentGC_alpha<-porcent_alfa[3]+porcent_alfa[4]
porcentGC_beta<-porcent_beta[3]+porcent_beta[4]
porcentGC_gamma<-porcent_gamma[3]+porcent_gamma[4]
porcentGC_delta<-porcent_delta[3]+porcent_delta[4]
porcentGC_omicron<-porcent_omicron[3]+porcent_omicron[4]
# Se imprimen estos resultados con texto adicional que facilita su lectura
totalGC<-paste("El porcentaje de G y C para la variante Alpha es:",porcentGC_alpha,"%, para Beta:",porcentGC_beta,"%, para Gamma:",porcentGC_gamma,"%, para Delta:",porcentGC_delta,"%, y para Omicron:",porcentGC_omicron,"%.")
totalGC
if (!requireNamespace("BiocManager",quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("msa")
#if (!requireNamespace("BiocManager",quietly = TRUE))
#  install.packages("BiocManager")
#BiocManager::install("msa")
c("MWAFGGRAAVGLLPRTASRASAWVGNPRWREPIVTCGRRGLHVTVNAGATRHAHLNLHYLQILNIKKQSVC
VVHLRNLGTLDNPSSLDETAYERLAEETLDSLAEFFEDLADKPYTLEDYDVSFGDGVLTIKLGGDLGTYVINKQ
TPNKQIWLSSPSSGPKRYDWTGKNWVYSHDGVSLHELLARELTKALNTKLDLSSLAYSGKGT",
"MWTFGRRAAAGLLPRTASRASAWVRNPRGRERIGTCGRRGLHVTANADAIRHSHLNLHYLGQILNIKKQSVCV
VHLRNSGTLGNPSSLDETAYERLAEETLDALAEFFEDLADKPYTLKDYDVSFGDGVLTIKLGGDLGTYVINKQT
PNKQIWLSSPSSGPKRYDWTGKNWVYSHDGVSLHELLARELTEALNTKLDLSSLAYSGKGT",
"MWTLGRRAAAGLLPRSAPPGSAAAGAGTRGPTRAAPLHGGRGLRVGTGAARGPSHANLSLHHLNQLVNVKKQS
VCLMNMRTVGTVSSPGSLDETTYERLAETTLDSLAEFFEDLADKPYTLEDYDVSFGSGVLTVKLGGDLGTYVIN
KQTPNKQIWLSSPSSGPKRYDWTGKNWVYSHDGVSLHELLATELTKAFKIKLDLSSLAYSGKGT",
"MWTFGRRAVAGLLASPSPAQAQTLTRAPRLAELAQLCSRRGLRTGINATCTTHHTSSNLRGLNQIRNVKRQSV
YLMNLRKSGTLGHPGSLDDTTYERLAEETLDSLAEFFEDLADKPYTFEDYDVSFGSGVLTVKLGGDLGTYVINK
QTPNKQIWLSSPSSGPKRYDWTGKNWVYSHDGVSLHELLGAELTKALKTKLDLSSLAYSGKDA",
"MWTLGRRAVAGLLASPSPAQAQTLTRVPRPAELAPLCGRRGLRTDIDATCTPRRASSNQRGLNQIWNVKKQSV
YLMNLRKSGTLGHPGSLDETTYERLAEETLDSLAEFFEDLADKPYTFEDYDVSFGSGVLTVKLGGDLGTYVINK
QTPNKQIWLSSPSSGPKRYDWTGKNWVYSHDGVSLHELLAAELTKALKTKLDLSSLAYSGKDA",
"MIYRSPAAISGLGERVDVWRERAAPCLARGRAIPSVSRLLPSPGKRGIVSRSASAGKGTGKGREGGQSSSLHF
LSQILNVKKQSVCVMHLRTTGTLGDPGSLDETTYERLAEETLDSLAEFFEDLADKPYTFEDYDVSFGSGVLTIK
MGGDLGTYVINKQTPNKQIWLSSPSSGPKRYDWTGKNWVYSHDGVSLHELLAAELTKALKTKLDLSSLAYSGKG
T",
"MWTFGRRAVAGLLASPSPAQAQTLTRAPRLAELAQLCSRRGLRTGINATRTTHHTSSNLRGLNQIRNVKRQSV
YLMNLRKSGTLGHPGSLDDTTYERLAEETLDSLAEFFEDLADKPYTFEDYDVSFGSGVLTVKLGGDLGTYVINK
QTPNKQIWLSSPSSGPKRYDRTGKNWVYSHDGVSLHELLGAELTKALKTKLDLSSLAYSGKDA",
"MWTLGRRSVASFLPRSALPGFAPTRAGAPRPAKDLSLSGLPGLRIGTAKAPARSQSSLSLRCLNQTLDVKKQS
VCWINLRTAGTLGDAGTLDDTTYERLAEETLDSLAEFFEDLADKPYTFEDYDVSFGSGVLTVKLGGDLGTYVIN
KQTPNKQIWLSSPSSGPKRYDWTGRNWVYSHDGVSLHELLATELTQALKTKLDLSALAYSGKDTCCPAQC","M
WTLGRRAVAGLLASPSPAQAQTLTRVPRPAELAPLCGRRSLRTGIDATCTPRRASSNLRGLNQIWNVKKQSVYL
MNLRKSGTLGHPGLLGSNPYERLAEETLDFLAEFFEDLADKPYTFEDYDVSFGSGVLTVKLGGDLGTYVINKQT
PNKQIWLSSPSSGPKRYDWTGKNWVYSHDGVSLHELLAAELTKALKTKLDLSSLAYSGKDA","MAVGACALGS
WLEADWAKPAILLPHTESKQLTKLTSGGSQVAARGQQRRRPGGALPALRDQRVGGREEEGGASATPGRLRLRGG
AASAACGGPGWAAGWLASFSPGERAPVGSGLPPPGRRDGRSAASEPERQGPTCAYYVQILKIKTQSIQFIHLRK
AGTLSDKSSLDETTYEKLAEETLDSLSDFFEDLADKPYTSEDFDVSFGSGVLTVKLGGDLGTYVINKQTPNKQI
WLSSPSSGPKRYDWTGKNWVYSHDGMSLHELLALELSKALKTTLDLSSLVYSGKDT","MSSRCQTQGSVHKAT
KNSQFQGFRGQIPKVKKQSVLLLNLRKSGTLGDKNSLDETTYEKLAEETLDSLADFFEDLGDKPFTSKDYDVSL
GSGVLTIKLGGDLGTYVINKQTPNKQIWLSSPTSGPKRYDWTGKNWVYVHDGVSLHELLEMEFSQTLKTQLDLS
SLVYSGKDT")
secuencias<-c("MWAFGGRAAVGLLPRTASRASAWVGNPRWREPIVTCGRRGLHVTVNAGATRHAHLNLHYLQILNIKKQSVC
VVHLRNLGTLDNPSSLDETAYERLAEETLDSLAEFFEDLADKPYTLEDYDVSFGDGVLTIKLGGDLGTYVINKQ
TPNKQIWLSSPSSGPKRYDWTGKNWVYSHDGVSLHELLARELTKALNTKLDLSSLAYSGKGT",
"MWTFGRRAAAGLLPRTASRASAWVRNPRGRERIGTCGRRGLHVTANADAIRHSHLNLHYLGQILNIKKQSVCV
VHLRNSGTLGNPSSLDETAYERLAEETLDALAEFFEDLADKPYTLKDYDVSFGDGVLTIKLGGDLGTYVINKQT
PNKQIWLSSPSSGPKRYDWTGKNWVYSHDGVSLHELLARELTEALNTKLDLSSLAYSGKGT",
"MWTLGRRAAAGLLPRSAPPGSAAAGAGTRGPTRAAPLHGGRGLRVGTGAARGPSHANLSLHHLNQLVNVKKQS
VCLMNMRTVGTVSSPGSLDETTYERLAETTLDSLAEFFEDLADKPYTLEDYDVSFGSGVLTVKLGGDLGTYVIN
KQTPNKQIWLSSPSSGPKRYDWTGKNWVYSHDGVSLHELLATELTKAFKIKLDLSSLAYSGKGT",
"MWTFGRRAVAGLLASPSPAQAQTLTRAPRLAELAQLCSRRGLRTGINATCTTHHTSSNLRGLNQIRNVKRQSV
YLMNLRKSGTLGHPGSLDDTTYERLAEETLDSLAEFFEDLADKPYTFEDYDVSFGSGVLTVKLGGDLGTYVINK
QTPNKQIWLSSPSSGPKRYDWTGKNWVYSHDGVSLHELLGAELTKALKTKLDLSSLAYSGKDA",
"MWTLGRRAVAGLLASPSPAQAQTLTRVPRPAELAPLCGRRGLRTDIDATCTPRRASSNQRGLNQIWNVKKQSV
YLMNLRKSGTLGHPGSLDETTYERLAEETLDSLAEFFEDLADKPYTFEDYDVSFGSGVLTVKLGGDLGTYVINK
QTPNKQIWLSSPSSGPKRYDWTGKNWVYSHDGVSLHELLAAELTKALKTKLDLSSLAYSGKDA",
"MIYRSPAAISGLGERVDVWRERAAPCLARGRAIPSVSRLLPSPGKRGIVSRSASAGKGTGKGREGGQSSSLHF
LSQILNVKKQSVCVMHLRTTGTLGDPGSLDETTYERLAEETLDSLAEFFEDLADKPYTFEDYDVSFGSGVLTIK
MGGDLGTYVINKQTPNKQIWLSSPSSGPKRYDWTGKNWVYSHDGVSLHELLAAELTKALKTKLDLSSLAYSGKG
T",
"MWTFGRRAVAGLLASPSPAQAQTLTRAPRLAELAQLCSRRGLRTGINATRTTHHTSSNLRGLNQIRNVKRQSV
YLMNLRKSGTLGHPGSLDDTTYERLAEETLDSLAEFFEDLADKPYTFEDYDVSFGSGVLTVKLGGDLGTYVINK
QTPNKQIWLSSPSSGPKRYDRTGKNWVYSHDGVSLHELLGAELTKALKTKLDLSSLAYSGKDA",
"MWTLGRRSVASFLPRSALPGFAPTRAGAPRPAKDLSLSGLPGLRIGTAKAPARSQSSLSLRCLNQTLDVKKQS
VCWINLRTAGTLGDAGTLDDTTYERLAEETLDSLAEFFEDLADKPYTFEDYDVSFGSGVLTVKLGGDLGTYVIN
KQTPNKQIWLSSPSSGPKRYDWTGRNWVYSHDGVSLHELLATELTQALKTKLDLSALAYSGKDTCCPAQC","M
WTLGRRAVAGLLASPSPAQAQTLTRVPRPAELAPLCGRRSLRTGIDATCTPRRASSNLRGLNQIWNVKKQSVYL
MNLRKSGTLGHPGLLGSNPYERLAEETLDFLAEFFEDLADKPYTFEDYDVSFGSGVLTVKLGGDLGTYVINKQT
PNKQIWLSSPSSGPKRYDWTGKNWVYSHDGVSLHELLAAELTKALKTKLDLSSLAYSGKDA","MAVGACALGS
WLEADWAKPAILLPHTESKQLTKLTSGGSQVAARGQQRRRPGGALPALRDQRVGGREEEGGASATPGRLRLRGG
AASAACGGPGWAAGWLASFSPGERAPVGSGLPPPGRRDGRSAASEPERQGPTCAYYVQILKIKTQSIQFIHLRK
AGTLSDKSSLDETTYEKLAEETLDSLSDFFEDLADKPYTSEDFDVSFGSGVLTVKLGGDLGTYVINKQTPNKQI
WLSSPSSGPKRYDWTGKNWVYSHDGMSLHELLALELSKALKTTLDLSSLVYSGKDT","MSSRCQTQGSVHKAT
KNSQFQGFRGQIPKVKKQSVLLLNLRKSGTLGDKNSLDETTYEKLAEETLDSLADFFEDLGDKPFTSKDYDVSL
GSGVLTIKLGGDLGTYVINKQTPNKQIWLSSPTSGPKRYDWTGKNWVYVHDGVSLHELLEMEFSQTLKTQLDLS
SLVYSGKDT")
secuencias
names(secuencias) = c("Raton", "Rata", "Perro", "Rhesus", "Humano",
"Caballo", "Macaco", "Vaca", "Chimpance", "Ornitorrinco", "Zarigueya")
secuencias
names(secuencias) = c("Raton","Rata","Perro","Rhesus","Humano","Caballo","Macaco","Vaca","Chimpance","Ornitorrinco","Zarigueya")
secuencias
library(msa)
mis_secuencias_AA <- AAStringSet(secuencias)
mis_secuencias_AA
alineamiento1 = msa(mis_secuencias_AA,"ClustalW")  #si crashea, clustalOmega
alineamiento1
print(alineamiento1,show=Complete)
print(alineamiento1,show="Complete"")
print(alineamiento1,show="Complete")
print(alineamiento1,show="complete")
library(seqinr)
library(seqinr)
alineamiento2 <- msaConvert(alineamiento1,"seqinr::allignment")
alineamiento2 <- msaConvert(alineamiento1,"seqinr::alignment")
alineamiento2
dsmatrix<-dist.alignment(alineamiento2,"identity")
distmatrix
distmatrix<-dist.alignment(alineamiento2,"identity")
distmatrix
clustering<-hclust(distmatrix)
plot(clustering)
library(ape)
install.packages("ape")
library(ape)
arbol<-as.phylo(hclust)
7%%2
7%%3
|||||||
a <- 1
a<-1
a
a
a<-5
a
radio<-7.2
pi<-3.1416
areacirculo<-pi*radio^2
radio<-7.2
pi<-3.1416
areacirculo<-pi*radio^2
sprintf("El área de un círculo con radio de ",radio," es: ",areacirculo)
radio<-7.2
pi<-3.1416
areacirculo<-pi*radio^2
sprintf("El área de un círculo con radio de %f",radio," es: %f ",areacirculo)
radio<-7.2
pi<-3.1416
areacirculo<-pi*radio^2
sprintf("El área de un círculo con radio de %f",radio," es: %f ",areacirculo)
radio<-7.2
pi<-3.1416
areacirculo<-pi*radio^2
sprintf("El área es: %f ",areacirculo)
radio<-7.2
pi<-3.1416
areacirculo<-pi*radio^2
sprintf("El área es: %f2 ",areacirculo)
radio<-7.2
pi<-3.1416
areacirculo<-pi*radio^2
sprintf("El área de un círculo con radio de: %f2 ",radio)
sprintf("es de: %f2 ",areacirculo)
radio<-7.2
pi<-3.1416
areacirculo<-pi*radio^2
sprintf("El área de un círculo con radio de: %f2 ",radio,"es de: %f2 ",areacirculo)
radio<-7.2
pi<-3.1416
areacirculo<-pi*radio^2
sprintf("El área de un círculo con radio de: %f2 ",radio,"es de: %f2 ",areacirculo)
radio<-7.2
pi<-3.1416
areacirculo<-pi*radio^2
print("El área de un círculo con radio de: ",radio,"es de: ",areacirculo)
radio<-7.2
pi<-3.1416
areacirculo<-pi*radio^2
sprintf("El área del círculo es de: %f2 ",areacirculo)
pi
base<-5.2
altura<-8.4
areatriangulo<-(base*altura)/2
sprintf("El área del triángulo es de: %f",areatriangulo)
# Problema 4 --------------------------------------------------------------
radio<-7.2
pi<-3.1416
areacirculo<-pi*radio^2
sprintf("El área del círculo es de: %f",areacirculo)
radio<-7.2
pi<-3.1416
areacirculo<-pi*radio^2
sprintf("El área del círculo es de: %f",areacirculo,"Hola")
base<-5.2
altura<-8.4
areatriangulo<-(base*altura)/2
sprintf("El área del triángulo es de: %f",areatriangulo)
# Problema 4 --------------------------------------------------------------
radio<-7.2
pi<-3.1416
areacirculo<-pi*radio^2
sprintf("El área del círculo es de: %f",areacirculo)
numero1 <- 10
numero2 <- 3
total <- numero1 + numero2
sprintf("El total de los dos numeros es: %d", total)
numero1 <- 10
numero2 <- 3
total <- numero1 + numero2
sprintf("El total de los dos numeros es: %d", total)
numero1 <- 10
numero2 <- 3
total <- numero1 + numero2
sprintf("El total de los dos numeros es: %d", total)
numero1<-10
numero2<-3
total<-numero1+numero2
sprintf("El total de los dos numeros es: %d", total)
numero1<-10
numero2<-3
total<-numero1+numero2
sprintf("El total de los dos numeros es: %d", total)
numero1<-10
numero2<-3
total<-numero1+numero2
sprintf("El total de los dos numeros es: %d", total)
numero1<-10
numero2<-3
total<-numero1+numero2
sprintf("Total: %f",total)
numero1<-10
numero2<-3
total<-numero1+numero2
sprintf("La suma de los dos números es de: %d",total)
pesos <- 1000
tipo_cambio <- 20
dolares <- cantidad_pesos / tipo_cambio
pesos <- 1000
tipo_cambio <- 20
dolares <- cantidad_pesos / tipo_cambio
pesos<-1000
tipo_cambio<-20
dolares<-cantidad_pesos/tipo_cambio
pesos<-1000
tipo_cambio<-20
dolares<-cantidad_pesos/tipo_cambio
pesos<-1000
tipo_cambio<-20
dolares<-cantidad_pesos/tipo_cambio
pesos<-1000
tipo_cambio<-20
dolares<-pesos/tipo_cambio
cat("La cantidad de", pesos, "pesos mexicanos equivale a", dolares, "dólares.")
gradosF <- 50
gradosC <- (5/9) * (gradosF - 32)
cat(gradosF, "grados Farenheit equivalen a", gradosC, " grados Celsius")
gradosF<-50
gradosC<-(5/9)*(gradosF-32)
cat(gradosF, "grados Farenheit equivalen a", gradosC, " grados Celsius")
base<-5.2
altura<-8.4
areatriangulo<-(base*altura)/2
cat("El área del triángulo con base de ",base," y altura de ",altura," es de: ",areatriangulo)
radio<-7.2
pi<-3.1416
areacirculo<-pi*radio^2
cat("El área del círculo con radio de ",radio," es de: ",areacirculo)
numero1<-10
numero2<-3
total<-numero1+numero2
cat("La suma de ",numero1," y de ",numero2," es de: ",total)
lado1<-10
lado2<-10
areaCuadrado<-lado1*lado2
sprintf("El área de un cuadrado con dos lados de ",lado1," y ",lado2," es de:", areaCuadrado)
lado1<-10
lado2<-10
areaCuadrado<-lado1*lado2
cat("El área de un cuadrado con dos lados de ",lado1," y ",lado2," es de:", areaCuadrado)
lado1<-10
lado2<-10
areaCuadrado<-lado1*lado2
cat("El área de un cuadrado con dos lados de ",lado1," y ",lado2," es de: ",areaCuadrado)
# Problema 1 --------------------------------------------------------------
numero1<-10
numero2<-3
total<-numero1+numero2
cat("La suma de ",numero1," y de ",numero2," es de: ",total)
# Problema 2 --------------------------------------------------------------
lado1<-10
lado2<-10
areaCuadrado<-lado1*lado2
cat("El área de un cuadrado con dos lados de ",lado1," y ",lado2," es de: ",areaCuadrado)
# Problema 3 --------------------------------------------------------------
base<-5.2
altura<-8.4
areatriangulo<-(base*altura)/2
cat("El área del triángulo con base de ",base," y altura de ",altura," es de: ",areatriangulo)
# Problema 4 --------------------------------------------------------------
radio<-7.2
pi<-3.1416
areacirculo<-pi*radio^2
cat("El área del círculo con radio de ",radio," es de: ",areacirculo)
# Problema 5 --------------------------------------------------------------
# Problema 6 --------------------------------------------------------------
pesos<-1000
tipo_cambio<-20
dolares<-pesos/tipo_cambio
cat("La cantidad de", pesos, "pesos mexicanos equivale a", dolares, "dólares.")
# Problema 7 --------------------------------------------------------------
gradosF<-50
gradosC<-(5/9)*(gradosF-32)
cat(gradosF, "grados Farenheit equivalen a", gradosC, " grados Celsius")
radio<-34
altura<-24
volumen<-(1/3)*pi*(radio^2)*altura
cat("El volumen del cono recto es de:", volumen)
radio<-34
altura<-24
volumen<-(1/3)*pi*(radio^2)*altura
cat("El volumen del cono recto con radio de ",radio," y altura de ",altura," es de:", volumen)
# Problema 1 --------------------------------------------------------------
numero1<-10
numero2<-3
total<-numero1+numero2
cat("La suma de ",numero1," y de ",numero2," es de: ",total)
# Problema 2 --------------------------------------------------------------
lado1<-10
lado2<-10
areaCuadrado<-lado1*lado2
cat("El área de un cuadrado con dos lados de ",lado1," y ",lado2," es de: ",areaCuadrado)
# Problema 3 --------------------------------------------------------------
base<-5.2
altura<-8.4
areatriangulo<-(base*altura)/2
cat("El área del triángulo con base de ",base," y altura de ",altura," es de: ",areatriangulo)
# Problema 4 --------------------------------------------------------------
radio<-7.2
pi<-3.1416
areacirculo<-pi*radio^2
cat("El área del círculo con radio de ",radio," es de: ",areacirculo)
# Problema 5 --------------------------------------------------------------
radio<-34
altura<-24
volumen<-(1/3)*pi*(radio^2)*altura
cat("El volumen del cono recto con radio de ",radio," y altura de ",altura," es de:", volumen)
# Problema 6 --------------------------------------------------------------
pesos<-1000
tipo_cambio<-20
dolares<-pesos/tipo_cambio
cat("La cantidad de", pesos, "pesos mexicanos equivale a", dolares, "dólares.")
# Problema 7 --------------------------------------------------------------
gradosF<-50
gradosC<-(5/9)*(gradosF-32)
cat(gradosF, "grados Farenheit equivalen a", gradosC, " grados Celsius")
source("~/.active-rstudio-document", echo=TRUE)
getwd()
# Problema 1 --------------------------------------------------------------
numero1<-10
numero2<-3
total<-numero1+numero2
cat("La suma de ",numero1," y de ",numero2," es de: ",total)
# Problema 2 --------------------------------------------------------------
lado1<-10
lado2<-10
areaCuadrado<-lado1*lado2
cat("El área de un cuadrado con dos lados de ",lado1," y ",lado2," es de: ",areaCuadrado)
# Problema 3 --------------------------------------------------------------
base<-5.2
altura<-8.4
areatriangulo<-(base*altura)/2
cat("El área del triángulo con base de ",base," y altura de ",altura," es de: ",areatriangulo)
# Problema 4 --------------------------------------------------------------
radio<-7.2
pi<-3.1416
areacirculo<-pi*radio^2
cat("El área del círculo con radio de ",radio," es de: ",areacirculo)
# Problema 5 --------------------------------------------------------------
radio<-34
altura<-24
volumen<-(1/3)*pi*(radio^2)*altura
cat("El volumen del cono recto con radio de ",radio," y altura de ",altura," es de:", volumen)
# Problema 6 --------------------------------------------------------------
pesos<-1000
tipo_cambio<-20
dolares<-pesos/tipo_cambio
cat("La cantidad de", pesos, "pesos mexicanos equivale a", dolares, "dólares.")
# Problema 7 --------------------------------------------------------------
gradosF<-50
gradosC<-(5/9)*(gradosF-32)
cat(gradosF, "grados Farenheit equivalen a", gradosC, " grados Celsius")
# Problema 1 --------------------------------------------------------------
numero1<-10
numero2<-3
total<-numero1+numero2
cat("La suma de ",numero1," y de ",numero2," es de: ",total)
# Problema 2 --------------------------------------------------------------
lado1<-10
lado2<-10
areaCuadrado<-lado1*lado2
cat("El área de un cuadrado con dos lados de ",lado1," y ",lado2," es de: ",areaCuadrado)
# Problema 3 --------------------------------------------------------------
base<-5.2
altura<-8.4
areatriangulo<-(base*altura)/2
cat("El área del triángulo con base de ",base," y altura de ",altura," es de: ",areatriangulo)
# Problema 4 --------------------------------------------------------------
radio<-7.2
pi<-3.1416
areacirculo<-pi*radio^2
cat("El área del círculo con radio de ",radio," es de: ",areacirculo)
# Problema 5 --------------------------------------------------------------
radio<-34
altura<-24
volumen<-(1/3)*pi*(radio^2)*altura
cat("El volumen del cono recto con radio de ",radio," y altura de ",altura," es de:", volumen)
# Problema 6 --------------------------------------------------------------
pesos<-1000
tipo_cambio<-20
dolares<-pesos/tipo_cambio
cat("La cantidad de", pesos, "pesos mexicanos equivale a", dolares, "dólares.")
# Problema 7 --------------------------------------------------------------
gradosF<-50
gradosC<-(5/9)*(gradosF-32)
cat(gradosF, "grados Farenheit equivalen a", gradosC, " grados Celsius")
## Se leen los datos y se crea una tabla con el csv
getwd()
setwd("/Users/Public/Escritorio/SemanaTecR/retoAnalitica/Codigo")
getwd()
data=read.csv("./CasoHuracanesCSV.csv")
## Se eliminan los datos inválidos en una nueva tabla
newHur<-data[(data$Wind>0),]
newHur<-newHur[(newHur$Pressure>0),]
newHur<-newHur[(newHur$Population>0),]
hist(newHur$Wind)
hist(newHur$Pressure)
hist(newHur$CO2)
hist(newHur$Population)
hist(newHur$Wind)
hist(newHur$Population)
